
git config --global user.email ""
git config --global user.name ""

git clone <link> //used to clone the cloud repo into local
git remote add origin <https://github.com/nihalasri/git-commamds.git>
// used to change repo

git init 

git add <file name> || git add .  
git commit -m "indicate the changes msg"
"fit , feat,! , refactor,chore,docs "

git push || git push origin main

git pull || git pull origin main

git checkout <branch name>
git checkout -a //shows the how branches created in cloud and also local
git checkout -b  //create new branch through comd 
git checkout -M //rename the branch name

git stach //move to bin or stack
git stach pop //retrieve code from bin

git status //show status

git branch // show branch created in local

git diff // shows different 

git merge //merge two branch

git log //shows commit changes in being to end

git pull request // used in website

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects